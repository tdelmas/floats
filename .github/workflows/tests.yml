name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    name: Tests on rust toolchain ${{ matrix.version }}
    strategy:
      matrix:
        version: [
          "nightly",
          "stable",
          "1.70",
          "1.56", # 2021 edition
        ]

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: |
          cargo xtask pre-build
          rustup toolchain install ${{ matrix.version }}
          cargo build
      - run: cargo test --verbose
      - run: cargo test --verbose --no-default-features
      - run: cargo test --verbose --features serde
      - run: cargo test --verbose --test 'serde' --no-default-features --features serde
      - run: cargo test --verbose --test 'serde' --no-default-features --features serde,libm
      - run: cargo test --verbose --test 'serde' --no-default-features --features serde,libm,std
      - run: cargo test --no-default-features --features 'libm'
      - run: cargo build --no-default-features --features serde,std,libm
      - run: cargo build --release
      - run: cargo build --release --no-default-features
      - run: cargo build --release --no-default-features --features serde
      - run: cargo build --release --no-default-features --features libm
      - run: cargo build --release --no-default-features --features serde,libm
      - run: cargo build --release --no-default-features --features serde,std,libm
      - run: cargo test --release --no-default-features --features serde,std
        
  clippy:
    runs-on: ubuntu-latest
    name: Clippy

    steps:
      - uses: actions/checkout@v3
      - run: |
          cargo xtask pre-build
          cargo clippy --verbose
